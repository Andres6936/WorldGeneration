/**
 * Gradient noise generated by throwing ellipses at the plain.
 * @param {number} width
 * @param {number} height
 */
function gradientNoise(
    width: number,
    height: number,
    points: number = 5000,
    radius: number = 100,
    alpha: number = 0.01,
    gradientCircles: boolean = true
): HTMLCanvasElement {
    let {canvas, ctx}: CanvasContext = createCanvasCtx(width, height);

    if (gradientCircles) {
        let g = ctx.createRadialGradient(0, 0, 0, 0, 0, 1);
        g.addColorStop(0, `rgba(255, 255, 255, ${alpha})`);
        g.addColorStop(1, `rgba(255, 255, 255, 0)`);

        ctx.fillStyle = g;
    } else {
        ctx.fillStyle = `rgba(255, 255, 255, ${alpha})`;
    }

    for (let i = 0; i < points; i++) {
        let points = [...Array(3)].map(() => random());

        let [x, y] = [points[0] * width, points[1] * height];
        let r = Math.pow(points[2], 2) * radius;

        ctx.save();
        ctx.translate(x, y);
        ctx.rotate(random() * Math.PI);
        ctx.scale(r * (0.5 + random()), r * (0.5 + random()));
        ctx.beginPath();
        ctx.arc(0, 0, 1, 0, Math.PI * 2);
        ctx.fill();
        ctx.restore();
    }

    return canvas;
}